/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Tue Sep  4 15:02:36 2018. */

#ifndef PB_SENSORBUG_PB_H_INCLUDED
#define PB_SENSORBUG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SensorBugMessage {
    uint32_t counter;
    uint32_t battery;
    uint32_t light;
    uint32_t pir_count;
    uint32_t motion_count;
    float temperature;
    float humidity;
    float pressure;
    float gas_resistance;
    uint32_t ambient_noise;
    uint32_t report_periocd;
    bool motion_en;
/* @@protoc_insertion_point(struct:SensorBugMessage) */
} SensorBugMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SensorBugMessage_init_default            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define SensorBugMessage_init_zero               {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SensorBugMessage_counter_tag             1
#define SensorBugMessage_battery_tag             2
#define SensorBugMessage_light_tag               3
#define SensorBugMessage_pir_count_tag           4
#define SensorBugMessage_motion_count_tag        5
#define SensorBugMessage_temperature_tag         6
#define SensorBugMessage_humidity_tag            7
#define SensorBugMessage_pressure_tag            8
#define SensorBugMessage_gas_resistance_tag      9
#define SensorBugMessage_ambient_noise_tag       10
#define SensorBugMessage_report_periocd_tag      11
#define SensorBugMessage_motion_en_tag           12

/* Struct field encoding specification for nanopb */
extern const pb_field_t SensorBugMessage_fields[13];

/* Maximum encoded size of messages (where known) */
#define SensorBugMessage_size                    64

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SENSORBUG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
