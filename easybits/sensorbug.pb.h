/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Fri Dec  7 21:37:20 2018. */

#ifndef PB_SENSORBUG_PB_H_INCLUDED
#define PB_SENSORBUG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _ResetSource {
    ResetSource_PowerOnReset = 0,
    ResetSource_ResetPin = 1,
    ResetSource_BrownOutVDDS = 2,
    ResetSource_BrownOutVDD = 3,
    ResetSource_BrownOutVDDR = 4,
    ResetSource_ClockLoss = 5,
    ResetSource_SysReset = 6,
    ResetSource_WarmReset = 7
} ResetSource;
#define _ResetSource_MIN ResetSource_PowerOnReset
#define _ResetSource_MAX ResetSource_WarmReset
#define _ResetSource_ARRAYSIZE ((ResetSource)(ResetSource_WarmReset+1))

/* Struct definitions */
typedef struct _SensorBugDownlinkMsg {
    bool has_period;
    uint32_t period;
    bool has_motion_en;
    bool motion_en;
    bool has_light_en;
    bool light_en;
    bool has_mic_en;
    bool mic_en;
    bool has_cmd_reset;
    bool cmd_reset;
/* @@protoc_insertion_point(struct:SensorBugDownlinkMsg) */
} SensorBugDownlinkMsg;

typedef struct _SensorBugUplinkMsg {
    bool has_counter;
    uint32_t counter;
    bool has_battery;
    uint32_t battery;
    bool has_light;
    uint32_t light;
    bool has_pir_count;
    uint32_t pir_count;
    bool has_motion_count;
    uint32_t motion_count;
    bool has_temperature;
    float temperature;
    bool has_humidity;
    float humidity;
    bool has_pressure;
    float pressure;
    bool has_gas_resistance;
    float gas_resistance;
    bool has_ambient_noise;
    uint32_t ambient_noise;
    bool has_period;
    uint32_t period;
    bool has_motion_en;
    bool motion_en;
    bool has_light_en;
    bool light_en;
    bool has_mic_en;
    bool mic_en;
    bool has_reset_source;
    ResetSource reset_source;
    bool has_sw_version_major;
    uint32_t sw_version_major;
    bool has_sw_version_minor;
    uint32_t sw_version_minor;
/* @@protoc_insertion_point(struct:SensorBugUplinkMsg) */
} SensorBugUplinkMsg;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SensorBugUplinkMsg_init_default          {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, _ResetSource_MIN, false, 0, false, 0}
#define SensorBugDownlinkMsg_init_default        {false, 0, false, 0, false, 0, false, 0, false, 0}
#define SensorBugUplinkMsg_init_zero             {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, _ResetSource_MIN, false, 0, false, 0}
#define SensorBugDownlinkMsg_init_zero           {false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SensorBugDownlinkMsg_period_tag          1
#define SensorBugDownlinkMsg_motion_en_tag       2
#define SensorBugDownlinkMsg_light_en_tag        3
#define SensorBugDownlinkMsg_mic_en_tag          4
#define SensorBugDownlinkMsg_cmd_reset_tag       10
#define SensorBugUplinkMsg_counter_tag           1
#define SensorBugUplinkMsg_battery_tag           2
#define SensorBugUplinkMsg_light_tag             3
#define SensorBugUplinkMsg_pir_count_tag         4
#define SensorBugUplinkMsg_motion_count_tag      5
#define SensorBugUplinkMsg_temperature_tag       6
#define SensorBugUplinkMsg_humidity_tag          7
#define SensorBugUplinkMsg_pressure_tag          8
#define SensorBugUplinkMsg_gas_resistance_tag    9
#define SensorBugUplinkMsg_ambient_noise_tag     10
#define SensorBugUplinkMsg_period_tag            11
#define SensorBugUplinkMsg_motion_en_tag         12
#define SensorBugUplinkMsg_light_en_tag          13
#define SensorBugUplinkMsg_mic_en_tag            14
#define SensorBugUplinkMsg_reset_source_tag      100
#define SensorBugUplinkMsg_sw_version_major_tag  128
#define SensorBugUplinkMsg_sw_version_minor_tag  129

/* Struct field encoding specification for nanopb */
extern const pb_field_t SensorBugUplinkMsg_fields[18];
extern const pb_field_t SensorBugDownlinkMsg_fields[6];

/* Maximum encoded size of messages (where known) */
#define SensorBugUplinkMsg_size                  85
#define SensorBugDownlinkMsg_size                14

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SENSORBUG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
